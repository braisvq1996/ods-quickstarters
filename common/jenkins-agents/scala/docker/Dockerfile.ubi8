FROM opendevstackorg/ods-jenkins-agent-base-ubi8:latest

LABEL maintainer="Jan Frank <jan.frank@boehringer-ingelheim.com>"

ARG nexusUrl
ARG nexusUsername
ARG nexusPassword

ENV LANG=en_US.UTF-8 \
    LC_ALL=en_US.UTF-8

# Container support is now integrated in Java 11, the +UseCGroupMemoryLimitForHeap option has been pruned
ENV JAVA_TOOL_OPTIONS="-XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true"

# Workaround we use when running behind proxy
# Basically we put the proxy certificate in certs folder
# COPY certs/* /etc/pki/ca-trust/source/anchors/
# RUN update-ca-trust force-enable && update-ca-trust extract


COPY yum.repos.d/* /etc/yum.repos.d/
RUN sh -c "echo 'rhel' > /etc/yum/vars/osname" && \
    sed -i 's@^\s*enabled\s*=.*$@enabled = 1@g' /etc/yum.repos.d/*.repo && \
    sed -i 's@^\s*enabled\s*=.*$@enabled = 0@g' /etc/yum.repos.d/adoptium-temurin.repo && \
    grep -ri '^\s*\(name\|enabled\)\s*=' /etc/yum.repos.d/*

# Install Java 11, 17, 21 and binutils
# Note: use java scripts are executed to test the scripts but also use-j11.sh in called 3nd place to set is as default version
RUN yum -y --nobest --skip-broken update && \
    yum install -y java-11-openjdk-devel && \
    yum install -y --enablerepo Adoptium temurin-17-jdk && \
    yum install -y --enablerepo Adoptium temurin-21-jdk && \
    yum install -y binutils && \
    yum updateinfo -y && \
    yum repolist -y && \
    sh -c "yum list installed | grep -i '\(java\|jdk\|temurin\)'" && \
    yum clean all -y && rm -rf /var/cache/yum

# Copy use java scripts.
COPY use-j*.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/use-j*.sh && \
    chmod ugo+s /usr/local/bin/use-j*.sh && \
    sh -c 'chmod ugo+s $(which alternatives)' && \
    ls -la /usr/local/bin/use-j*.sh && \
    echo "--- STARTS JDK 11/17/21 TESTS ---" && \
    use-j21.sh && \
    use-j17.sh && \
    use-j11.sh && \
    echo "--- ENDS JDK 11/17/21 TESTS ---" && \
## Needed in case base and jdk agents has a mismatch in java versions
    rm -fv /etc/profile.d/set-default-java.sh && \
    echo "export JAVA_HOME=/usr/lib/jvm/$(ls -lah /usr/lib/jvm | grep "java-11-openjdk-11.*\.x86_64" | awk '{print $NF}' | head -1)" >> /etc/profile.d/set-default-java.sh && \
    echo "export USE_JAVA_VERSION=java-11" >> /etc/profile.d/set-default-java.sh && \
    chmod +x /etc/profile.d/set-default-java.sh


# Install sbt
ENV SBT_VERSION=1.9.7
ENV SBT_CREDENTIALS="$HOME/.sbt/.credentials"
RUN rm -f /etc/yum.repos.d/bintray-rpm.repo && \
    curl -L https://www.scala-sbt.org/sbt-rpm.repo > sbt-rpm.repo && \
    mv sbt-rpm.repo /etc/yum.repos.d/ && \
    yum -y install sbt-$SBT_VERSION && \
    yum clean all && \
    rm -rf /var/cache/yum

COPY sbtconfig/repositories $HOME/.sbt/repositories
COPY sbtconfig/credentials.sbt $HOME/.sbt/1.0/plugins/credentials.sbt
COPY sbtconfig/credentials $HOME/.sbt/.credentials
COPY sbtconfig/sbtopts /etc/sbt/sbtopts
COPY set_sbt_proxy.sh /tmp/set_sbt_proxy.sh

RUN cat $HOME/.sbt/repositories | sed -e "s|NEXUS_URL|$nexusUrl|g" > $HOME/.sbt/repositories.tmp && \
    mv $HOME/.sbt/repositories.tmp $HOME/.sbt/repositories  && \
    nexusHost=$(echo $nexusUrl | sed -e "s|https://||g" | sed -e "s|http://||g") && \
    nexusHost=$(echo $nexusHost | sed -e "s|:.*||g") && \
    sed -i.bak -e "s|NEXUS_HOST|$nexusHost|g" $HOME/.sbt/.credentials && \
    sed -i.bak -e "s|NEXUS_USERNAME|$nexusUsername|g" $HOME/.sbt/.credentials && \
    sed -i.bak -e "s|NEXUS_PASSWORD|$nexusPassword|g" $HOME/.sbt/.credentials && \
    rm $HOME/.sbt/.credentials.bak && \
    cd /tmp && \
    /tmp/set_sbt_proxy.sh && \
    if [ ! -f "/usr/bin/sbt" ]; then echo "sbt path /usr/bin/sbt could not be found"; exit 1 ; fi

# Set java proxy via JAVA_OPTS
RUN bash -l -c 'echo export JAVA_OPTS="$(/tmp/set_java_proxy.sh && echo $JAVA_OPTS)" >> /etc/bash.bashrc'

RUN chown -R 1001:0 $HOME && \
    chmod -R g+rwX $HOME && \
    chmod -c 666 /etc/pki/ca-trust/extracted/java/cacerts && \
    ls -la /etc/pki/ca-trust/extracted/java/cacerts

# temporary java version switch bugfix
USER root
RUN chgrp -R 0 /var/lib/alternatives && \
  chmod -R g=u /var/lib/alternatives && \
  chgrp -R 0 /etc/alternatives && \
  chmod -R g=u /etc/alternatives && \
  chmod -R u+w /usr/bin && \
  chgrp -R 0 /usr/bin && \
  chmod -R g=u /usr/bin && \
  chgrp -R 0 /usr/share/man && \
  chmod -R g=u /usr/share/man

USER 1001